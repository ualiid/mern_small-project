{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIGWALL POSTE\\\\Desktop\\\\project_mern_memories\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport useStyles from './styles';\nimport FileBase from 'react-file-base64';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const {\n    user\n  } = useAuth0();\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId == 0) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(...postData, name));\n    }\n\n    clear();\n  };\n\n  if (!user) {}\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, currentId ? 'Updating' : 'Creating', \" a Memory\"), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({ ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"message\",\n    fullWidth: true,\n    value: postData.message,\n    onChange: e => setPostData({ ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"tags\",\n    fullWidth: true,\n    value: postData.tags,\n    onChange: e => setPostData({ ...postData,\n      tags: e.target.value.split(',')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: ({\n      base64\n    }) => setPostData({ ...postData,\n      selectedFile: base64\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \" Submit \"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \" Clear \")));\n};\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/BIGWALL POSTE/Desktop/project_mern_memories/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useStyles","FileBase","useSelector","useDispatch","createPost","updatePost","useAuth0","Form","currentId","setCurrentId","postData","setPostData","title","message","tags","selectedFile","user","post","state","posts","find","p","_id","classes","dispatch","clear","handleSubmit","e","preventDefault","name","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core'\r\nimport useStyles from './styles'\r\nimport FileBase from 'react-file-base64';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { createPost,updatePost } from '../../actions/posts'\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nconst Form = ({currentId,setCurrentId}) => {\r\n    const [postData, setPostData] = useState({\r\n         title: '', message: '', tags: '', selectedFile: ''\r\n    });\r\n    const {user}= useAuth0();\r\n    const post = useSelector((state) =>currentId ? state.posts.find((p)=>p._id===currentId ) : null);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n     if(post) setPostData(post);\r\n    },[post])\r\n\r\n    const clear = () => {\r\n        setCurrentId(0);\r\n        setPostData({\r\n             title: '', message: '', tags: '', selectedFile: ''\r\n        });\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(currentId==0){\r\n            dispatch(updatePost(currentId,postData))\r\n        } else {\r\n        dispatch(createPost(...postData,name))\r\n    }\r\n    clear();\r\n}\r\nif (!user){\r\n\r\n}\r\n    \r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete='off' noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                <Typography variant='h6'>{currentId? 'Updating':'Creating'} a Memory</Typography>\r\n                <TextField\r\n                    name='title'\r\n                    variant='outlined'\r\n                    label='title'\r\n                    fullWidth\r\n                    value={postData.title}\r\n                    onChange={(e) => setPostData({ ...postData, title: e.target.value })}\r\n                />\r\n                <TextField\r\n                    name='message'\r\n                    variant='outlined'\r\n                    label='message'\r\n                    fullWidth\r\n                    value={postData.message}\r\n                    onChange={(e) => setPostData({ ...postData, message: e.target.value })}\r\n                />\r\n                <TextField\r\n                    name='tags'\r\n                    variant='outlined'\r\n                    label='tags'\r\n                    fullWidth\r\n                    value={postData.tags}\r\n                    onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })}\r\n                />\r\n                <div className={classes.fileInput}>\r\n                    <FileBase\r\n                        type='file'\r\n                        multiple={false}\r\n                        onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })}\r\n                    />\r\n\r\n                </div>\r\n                <Button className={classes.buttonSubmit} variant='contained' color='primary' size='large' type='submit' fullWidth> Submit </Button>\r\n                <Button variant='contained' color=\"secondary\" size='small' onClick={clear} fullWidth> Clear </Button>\r\n\r\n            </form>\r\n        </Paper>\r\n    );\r\n}\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}