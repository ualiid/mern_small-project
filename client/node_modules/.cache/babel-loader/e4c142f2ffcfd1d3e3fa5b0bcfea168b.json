{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIGWALL POSTE\\\\Desktop\\\\project_mern_memories\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\";\nimport React, { useState } from 'react';\nimport { Avatar, Box, Paper, Button, Typography, Container } from '@material-ui/core'; // import { GoogleLogin } from 'react-google-login';\n\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Icon from './Icon';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport useStyles from './styles';\nimport Input from './input';\n\nconst Auth = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const {\n    loginWithRedirect,\n    isAuthenticated\n  } = useAuth0();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = e => {\n    e.prevent.default();\n  };\n\n  const handleChange = () => {};\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const switchMode = () => {\n    setIsSignup(previsSignup => !previsSignup);\n    handleShowPassword(false);\n  }; // const switchMode=()=>{\n  //     if(isSignup===true){\n  //         isSignup=false;\n  //     }else{\n  //         isSignup=true;\n  //     }\n  // }\n  // const googleSuccess = async (res) => {\n  //     const result = res?.profileObj;\n  //     const token = res?.tokenId;\n  //     try {\n  //         dispatch({ type: 'AUTH', data: { result, token } });\n  //         navigate('/')\n  //     } catch (error) {\n  //         console.log(error);\n  //     }\n  // }\n  // const googleFailure = (err) => {\n  //     console.log(err);\n  //     console.log('Google Sign In was unsuccessful . Try Again Later ')\n  // }\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Login with Google accounts\"), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.googleButton,\n    color: \"primary\",\n    fullWidth: true,\n    onClick: () => loginWithRedirect(),\n    startIcon: /*#__PURE__*/React.createElement(Icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 32\n      }\n    }),\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Google Sign In\"))));\n};\n\nexport default Auth;","map":{"version":3,"sources":["C:/Users/BIGWALL POSTE/Desktop/project_mern_memories/client/src/components/Auth/Auth.js"],"names":["React","useState","Avatar","Box","Paper","Button","Typography","Container","useNavigate","useDispatch","useAuth0","Icon","LockOutlinedIcon","useStyles","Input","Auth","showPassword","setShowPassword","isSignup","setIsSignup","loginWithRedirect","isAuthenticated","classes","dispatch","navigate","handleSubmit","e","prevent","default","handleChange","handleShowPassword","prevShowPassword","switchMode","previsSignup","paper","avatar","googleButton"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAgBC,GAAhB,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,SAAhD,QAAkE,mBAAlE,C,CACA;;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AACA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAEmB,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAAyCX,QAAQ,EAAvD;AACA,QAAMY,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAMU,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,QAAQ,GAAGhB,WAAW,EAA5B;;AACA,QAAMiB,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,OAAF,CAAUC,OAAV;AACH,GAFD;;AAGA,QAAMC,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAGA,QAAMC,kBAAkB,GAAG,MAAMb,eAAe,CAAEc,gBAAD,IAAsB,CAACA,gBAAxB,CAAhD;;AACA,QAAMC,UAAU,GAAG,MAAM;AACrBb,IAAAA,WAAW,CAAEc,YAAD,IAAkB,CAACA,YAApB,CAAX;AACAH,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,GAHD,CAde,CAkBf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,sBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAER,OAAO,CAACY,KAA1B;AAAiC,IAAA,SAAS,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEZ,OAAO,CAACa,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAJJ,eAKM,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF,oBAAC,MAAD;AACI,IAAA,SAAS,EAAEb,OAAO,CAACc,YADvB;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,SAAS,MAHb;AAII,IAAA,OAAO,EAAE,MAAMhB,iBAAiB,EAJpC;AAKI,IAAA,SAAS,eAAE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALf;AAMI,IAAA,OAAO,EAAC,WANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADE,CALN,CADJ,CADJ;AAkDH,CAzFD;;AA2FA,eAAeL,IAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { Avatar,Box, Paper, Button, Typography, Container, } from '@material-ui/core';\r\n// import { GoogleLogin } from 'react-google-login';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport Icon from './Icon';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport useStyles from './styles';\r\nimport Input from './input';\r\nconst Auth = () => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [isSignup, setIsSignup] = useState(false);\r\n    const { loginWithRedirect, isAuthenticated } = useAuth0();\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const handleSubmit = (e) => {\r\n        e.prevent.default();\r\n    }\r\n    const handleChange = () => {\r\n\r\n    }\r\n    const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword);\r\n    const switchMode = () => {\r\n        setIsSignup((previsSignup) => !previsSignup);\r\n        handleShowPassword(false);\r\n    }\r\n    // const switchMode=()=>{\r\n    //     if(isSignup===true){\r\n    //         isSignup=false;\r\n    //     }else{\r\n    //         isSignup=true;\r\n    //     }\r\n    // }\r\n    // const googleSuccess = async (res) => {\r\n    //     const result = res?.profileObj;\r\n    //     const token = res?.tokenId;\r\n    //     try {\r\n    //         dispatch({ type: 'AUTH', data: { result, token } });\r\n    //         navigate('/')\r\n    //     } catch (error) {\r\n    //         console.log(error);\r\n    //     }\r\n    // }\r\n    // const googleFailure = (err) => {\r\n    //     console.log(err);\r\n    //     console.log('Google Sign In was unsuccessful . Try Again Later ')\r\n    // }\r\n    return (\r\n        <Container component='main' maxWidth='xs'>\r\n            <Paper className={classes.paper} elevation={6}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h6\">Login with Google accounts</Typography>\r\n                  <Box>\r\n                <Button\r\n                    className={classes.googleButton}\r\n                    color='primary'\r\n                    fullWidth\r\n                    onClick={() => loginWithRedirect()}\r\n                    startIcon={<Icon />}\r\n                    variant='contained'>\r\n\r\n                    Google Sign In\r\n\r\n                </Button>\r\n                  </Box>\r\n                {/* <GoogleLogin\r\n                        clientId='dev-dmnk7jvezbx4r615.us.auth0.com'\r\n                        render={(renderProps) => (\r\n                            <Button\r\n                                className={classes.googleButton}\r\n                                color='primary'\r\n                                fullWidth\r\n                                onClick={renderProps.onClick}\r\n                                disabled={renderProps.disabled}\r\n                                startIcon={<Icon />}\r\n                                variant='contained'>\r\n\r\n                                Google Sign In\r\n\r\n                            </Button>\r\n\r\n\r\n                        )}\r\n                        onSuccess={googleSuccess}\r\n                        onFailure={googleFailure}\r\n                        cooKiePolicy='single_host_origin'\r\n                    /> */}\r\n\r\n\r\n\r\n\r\n\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Auth"]},"metadata":{},"sourceType":"module"}