{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIGWALL POSTE\\\\Desktop\\\\project_mern_memories\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\";\nimport React, { useState } from 'react';\nimport { Avatar, Paper, Button, Grid, Typography, Container } from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport Icon from './Icon';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport useStyles from './styles';\nimport Input from './input';\n\nconst Auth = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const navigate = useNavigate(); // let isSignup = true;\n\n  const handleSubmit = e => {\n    e.prevent.default();\n  };\n\n  const handleChange = () => {};\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const switchMode = () => {\n    setIsSignup(previsSignup => !previsSignup);\n    handleShowPassword(false);\n  }; // const switchMode=()=>{\n  //     if(isSignup===true){\n  //         isSignup=false;\n  //     }else{\n  //         isSignup=true;\n  //     }\n  // }\n\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: 'AUTH',\n        data: {\n          result,\n          token\n        }\n      });\n      navigate('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = err => {\n    console.log(err);\n    console.log('Google Sign In was unsuccessful . Try Again Later ');\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, isSignup ? 'Sign Up ' : 'Sign In'), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, isSignup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"firstName\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email Adress\",\n    handleChange: handleChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Password\",\n    handleChange: handleChange,\n    type: showPassword ? 'text' : 'password',\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }), isSignup && /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Repeat Password\",\n    handleChange: handleChange,\n    type: showPassword ? 'text' : 'password',\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 38\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, isSignup ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(Auth0Provider, {\n    domain: \"\",\n    clientId: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifycontent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, isSignup ? 'Already have an account ? Sign In' : 'You don\\'t have an account ? Sign Up '))))));\n};\n\nexport default Auth;","map":{"version":3,"sources":["C:/Users/BIGWALL POSTE/Desktop/project_mern_memories/client/src/components/Auth/Auth.js"],"names":["React","useState","Avatar","Paper","Button","Grid","Typography","Container","GoogleLogin","useNavigate","useDispatch","Auth0Provider","Icon","LockOutlinedIcon","useStyles","Input","Auth","showPassword","setShowPassword","isSignup","setIsSignup","classes","dispatch","navigate","handleSubmit","e","prevent","default","handleChange","handleShowPassword","prevShowPassword","switchMode","previsSignup","googleSuccess","res","result","profileObj","token","tokenId","type","data","error","console","log","googleFailure","err","paper","avatar","form","submit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Avatar, Paper, Button, Grid, Typography, Container, } from '@material-ui/core';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport {Auth0Provider} from '@auth0/auth0-react'\r\nimport Icon from './Icon';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport useStyles from './styles';\r\nimport Input from './input';\r\nconst Auth = () => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [isSignup, setIsSignup] = useState(false);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    // let isSignup = true;\r\n    const handleSubmit = (e) => {\r\n        e.prevent.default();\r\n    }\r\n    const handleChange = () => {\r\n\r\n    }\r\n    const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword);\r\n    const switchMode = () => {\r\n        setIsSignup((previsSignup) => !previsSignup);\r\n        handleShowPassword(false);\r\n    }\r\n    // const switchMode=()=>{\r\n    //     if(isSignup===true){\r\n    //         isSignup=false;\r\n    //     }else{\r\n    //         isSignup=true;\r\n    //     }\r\n    // }\r\n    const googleSuccess = async (res) => {\r\n        const result = res?.profileObj;\r\n        const token = res?.tokenId;\r\n        try {\r\n            dispatch({ type: 'AUTH', data: { result, token } });\r\n            navigate('/')\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    const googleFailure = (err) => {\r\n        console.log(err);\r\n        console.log('Google Sign In was unsuccessful . Try Again Later ')\r\n    }\r\n    return (\r\n        <Container component='main' maxWidth='xs'>\r\n            <Paper className={classes.paper} elevation={3}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography variant='h5'>\r\n                    {isSignup ? 'Sign Up ' : 'Sign In'}\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        {\r\n                            isSignup && (\r\n                                <>\r\n                                    <Input name='firstName' label='First Name' handleChange={handleChange} autoFocus half></Input>\r\n                                    <Input name='lastName' label='Last Name' handleChange={handleChange} half></Input>\r\n\r\n                                </>\r\n                            )\r\n                        }\r\n                        <Input name='email' label='Email Adress' handleChange={handleChange} type='email' />\r\n                        <Input name='password' label='Password' handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\r\n                        {isSignup && <Input name='password' label='Repeat Password' handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />}\r\n                    </Grid>\r\n\r\n                    <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\r\n                        {isSignup ? 'Sign Up' : 'Sign In'}\r\n                    </Button>\r\n                    <Auth0Provider\r\n                    domain=''\r\n                    clientId=''\r\n                    >\r\n\r\n\r\n                    </Auth0Provider>\r\n\r\n                    {/* <GoogleLogin\r\n                        clientId='dev-dmnk7jvezbx4r615.us.auth0.com'\r\n                        render={(renderProps) => (\r\n                            <Button\r\n                                className={classes.googleButton}\r\n                                color='primary'\r\n                                fullWidth\r\n                                onClick={renderProps.onClick}\r\n                                disabled={renderProps.disabled}\r\n                                startIcon={<Icon />}\r\n                                variant='contained'>\r\n\r\n                                Google Sign In\r\n\r\n                            </Button>\r\n\r\n\r\n                        )}\r\n                        onSuccess={googleSuccess}\r\n                        onFailure={googleFailure}\r\n                        cooKiePolicy='single_host_origin'\r\n                    /> */}\r\n\r\n                 \r\n\r\n                    <Grid container justifycontent='flex-end'>\r\n                        <Grid item>\r\n                            <Button onClick={switchMode}>\r\n                                {isSignup ? 'Already have an account ? Sign In' : 'You don\\'t have an account ? Sign Up '}\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </form>\r\n\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Auth"]},"metadata":{},"sourceType":"module"}