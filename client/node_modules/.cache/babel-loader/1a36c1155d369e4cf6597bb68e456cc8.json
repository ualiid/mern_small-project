{"ast":null,"code":"import { useAuth0 } from '@auth0/auth0-react';\nimport * as api from '../api';\nimport { FETCH_ALL, CREATE, UPDATE, LIKE, DELETE } from '../constants/actionTypes'; //actions\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post); //distruct the response and get data\n\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n}; // export const likePost = (id, post) => async (dispatch) => {\n//     try {\n//         const { data } = await api.likePost(id, post)\n//         dispatch({ type: LIKE , payload: data })\n//     } catch (error) {\n//         console.log(error.message);\n//     }\n// }\n\nexport const likePost = (id, post) => async dispatch => {\n  const {\n    user\n  } = useAuth0();\n\n  try {\n    const {\n      data\n    } = await api.likePost(id, post);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n    getPosts();\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"sources":["C:/Users/BIGWALL POSTE/Desktop/project_mern_memories/client/src/actions/posts.js"],"names":["useAuth0","api","FETCH_ALL","CREATE","UPDATE","LIKE","DELETE","getPosts","dispatch","data","fetchPosts","type","payload","error","console","log","message","createPost","post","updatePost","id","deletePost","likePost","user"],"mappings":"AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;AACA,SAAQC,SAAR,EAAkBC,MAAlB,EAAyBC,MAAzB,EAAgCC,IAAhC,EAAqCC,MAArC,QAAkD,0BAAlD,C,CACA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAClD,MAAI;AACI,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,GAAG,CAACS,UAAJ,EAAvB;AACAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAET,SAAR;AAAmBU,MAAAA,OAAO,EAAEH;AAA5B,KAAD,CAAR;AACH,GAHL,CAGM,OAAOI,KAAP,EAAc;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACF;AAEJ,CARM;AASP,OAAO,MAAMC,UAAU,GAAEC,IAAD,IAAQ,MAAMV,QAAN,IAAiB;AAC7C,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAO,MAAMR,GAAG,CAACgB,UAAJ,CAAeC,IAAf,CAAnB,CADA,CACyC;;AACzCV,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACR,MAAN;AAAaS,MAAAA,OAAO,EAACH;AAArB,KAAD,CAAR;AACH,GAHD,CAGE,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;AACJ,CAPM;AAQP,OAAO,MAAMG,UAAU,GAAC,CAACC,EAAD,EAAIF,IAAJ,KAAW,MAAMV,QAAN,IAAiB;AAChD,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMR,GAAG,CAACkB,UAAJ,CAAeC,EAAf,EAAkBF,IAAlB,CAArB;AACAV,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACP,MAAN;AAAcQ,MAAAA,OAAO,EAACH;AAAtB,KAAD,CAAR;AACH,GAHD,CAGE,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;AACJ,CAPM;AAQP,OAAO,MAAMK,UAAU,GAAED,EAAD,IAAM,MAAMZ,QAAN,IAAiB;AAC3C,MAAG;AACC,UAAMP,GAAG,CAACoB,UAAJ,CAAeD,EAAf,CAAN;AACNZ,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAACL,MAAN;AAAaM,MAAAA,OAAO,EAACQ;AAArB,KAAD,CAAR;AACG,GAHD,CAGC,OAAMP,KAAN,EAAY;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;AAEJ,CARM,C,CAUP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMM,QAAQ,GAAG,CAACF,EAAD,EAAKF,IAAL,KAAc,MAAOV,QAAP,IAAoB;AACtD,QAAM;AAACe,IAAAA;AAAD,MAASvB,QAAQ,EAAvB;;AACA,MAAI;AACA,UAAM;AAAES,MAAAA;AAAF,QAAW,MAAMR,GAAG,CAACqB,QAAJ,CAAaF,EAAb,EAAiBF,IAAjB,CAAvB;AACAV,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEN,IAAR;AAAeO,MAAAA,OAAO,EAAEH;AAAxB,KAAD,CAAR;AACAF,IAAAA,QAAQ;AACX,GAJD,CAIE,OAAOM,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;AACJ,CATM","sourcesContent":["import { useAuth0 } from '@auth0/auth0-react';\r\nimport * as api from '../api'\r\nimport {FETCH_ALL,CREATE,UPDATE,LIKE,DELETE} from '../constants/actionTypes';\r\n//actions\r\nexport const getPosts = () => async (dispatch) => {\r\ntry {\r\n        const { data } = await api.fetchPosts();\r\n        dispatch({ type: FETCH_ALL, payload: data })\r\n    } catch (error) {\r\n       console.log(error.message); \r\n    }\r\n    \r\n}\r\nexport const createPost=(post)=>async(dispatch)=>{\r\n    try {\r\n        const {data}=await api.createPost(post); //distruct the response and get data\r\n        dispatch({type:CREATE,payload:data})\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\nexport const updatePost=(id,post)=>async(dispatch)=>{\r\n    try {\r\n        const {data} = await api.updatePost(id,post)\r\n        dispatch({type:UPDATE, payload:data})\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\nexport const deletePost=(id)=>async(dispatch)=>{\r\n    try{\r\n        await api.deletePost(id);\r\n  dispatch({type:DELETE,payload:id});  \r\n    }catch(error){\r\n        console.log(error.message);\r\n    }\r\n\r\n}\r\n\r\n// export const likePost = (id, post) => async (dispatch) => {\r\n//     try {\r\n//         const { data } = await api.likePost(id, post)\r\n//         dispatch({ type: LIKE , payload: data })\r\n//     } catch (error) {\r\n//         console.log(error.message);\r\n//     }\r\n// }\r\nexport const likePost = (id, post) => async (dispatch) => {\r\n    const {user} = useAuth0()\r\n    try {\r\n        const { data } = await api.likePost(id, post)\r\n        dispatch({ type: LIKE , payload: data })\r\n        getPosts();\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}